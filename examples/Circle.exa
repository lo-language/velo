/**
 * A circle constructor.
 *
 * This file is loaded once. Each time it's run, it returns a new object (independent, isolated, sequential process).
 * The object is built on the initial message (that way the constructor doesn't have to create it, the caller does).
 * Normally a message is sent, then acted upon, then dropped by the recipient. But instead of being dropped, it can
 * be handed to a different process. Where do actions live? How do they hop threads?
 */

receive center, radius, lib

shape = lib.createShape([center.x - radius, center.y - radius], radius)

reply (shape += [

    getCenter:
        reply(center)

    getRadius:
        reply(radius)

//    move: action (xOffset, yOffset)
//        center.x += xOffset
//        center.y += yOffset

    resize:
        receive newRadius
        radius = newRadius

    getArea:
        return lib.PI * radius^2

    draw:
        receive screen
])