#!/usr/bin/env node

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Seth Purcell. All rights reserved.
 *  Licensed under the MIT License. See LICENSE in the project root for license information.
 *-------------------------------------------------------------------------------------------*/

/*
 * Author: Seth Purcell
 * Date: 12/24/14
 */

// todo - put all the logic in a tested module and just call into it here

'use strict';

process.title = 'exa';

const util = require('util');
const path = require('path');
const argv = require('minimist')(process.argv.slice(2));
const IO = require('../runtime/IO');
const System = require('../runtime/System');
const Compiler = require('../codegen/Compiler');
const FileResolver = require('../resolvers/FileResolver');
const Loader = require('../builders/Loader');
const Task = require('../runtime/Task');

var sourceFile = argv._.shift();

if (sourceFile == null) {
    console.error("error: no source file specified");
    process.exit();
}

// get the path of the module
var modulePath = path.dirname(sourceFile);
var moduleName = path.basename(sourceFile, '.exa');

var resolver = new FileResolver(modulePath);
var compiler = new Compiler(resolver);
var loader = new Loader();

IO.args = argv;

resolver.resolve(moduleName).then(source => {

    return compiler.compile(source).then(context => {
        
        var main = loader.loadMain(context);

        var d = Q.defer();

        Task.sendRootRequest(main, [argv._, IO, System], d.resolve.bind(d), d.reject.bind(d));

        return d.promise;
    });
},
function (msg) {
    throw msg;
}).done();