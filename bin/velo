#!/usr/bin/env node
/**=============================================================================
 *
 * Copyright (c) 2013 - 2017 Seth Purcell
 * Licensed under Apache License v2.0 with Runtime Library Exception
 *
 * See LICENSE.txt in the project root for license information.
 *
 =============================================================================*/

/*
 * Date: 12/24/14
 */

// todo - put all the logic in a tested module and just call into it here

'use strict';

process.title = 'velo';

const util = require('util');
const path = require('path');
const argv = require('minimist')(process.argv.slice(2));

const System = require('../runtime/System');

const Sourcer = require('../pipeline/Sourcer');
const Program = require('../pipeline/Program');
// const NodeBuilder = require('../pipeline/NodeBuilder');

var commands = ['run', 'build', 'dump'];

var cmd = argv._.shift();
var sourceFile = argv._.shift();

if (commands.indexOf(cmd) == -1) {

    console.error("unknown command '" + cmd + "'");
    console.error("valid commands are:", commands.join(', '));
    process.exit(1);
}

if (sourceFile == null) {
    console.error("error: no source file specified");
    process.exit();
}

var sourcer = new Sourcer(path.dirname(sourceFile));

sourcer.acquire(null, path.basename(sourceFile, '.lo')).then(
    function (main) {

        var program = new Program(main, sourcer);

        switch (cmd) {

            case 'dump':
                return program.dump();

            case 'build':
                console.error("sorry, building not supported yet");
                //return new NodeBuilder().build(program, argv.build);
                return;

            case 'run':
                return program.run([argv._, System]);
        }
    }).catch(
    function (err) {

        // todo include line failed at
        console.error("FAIL", err);
        process.exit(1);
    });
