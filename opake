#!/usr/bin/env node
/**
 * The Opake-to-node compiler/VM
 *
 * we need the ability to compile dynamically loaded files
 * compiles provided source file, evals it to create an object
 */

'use strict';

var fs = require('fs');
var parser = require('./parser/Parser');
var System = require('./vm/System');

var sourceFile = process.argv[2];

if (sourceFile == null) {
    throw new Error("no source file specified");
}

// read the source file
// node [path to this file] [path to input file]
// model args as object that throws when you ask for an empty one
var source = fs.readFileSync(process.argv[2], 'utf8');

//////////////////////////////////////////
// parse

console.error("parsing " + sourceFile);
var module = parser.parse(source);
//console.error(util.inspect(ast, {depth: null}));

//////////////////////////////////////////
// compile

console.error("compiling");
var js = module.toJavaScript();

//////////////////////////////////////////
// load

console.error("loading");
var main;
eval("main = " + js + ';');
var sys = new System(main);

//////////////////////////////////////////
// initialize the environment

console.error("initializing environment");
sys.init();

//////////////////////////////////////////
// run

console.error("running");
sys.run();
//process.exit(exitCode);