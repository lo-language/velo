test is -> {

    // sync calls

    foo();
    foo.bar();

    x = foo();
    (x, y) = foo();

    // todo?
    // x, y = foo();

    // async calls

    foo;
    @foo(18);

    @sessionStore.getByID(sessionID);

    //foo => bar;
    (bar, baz) = @foo(47);  // destructuring

    // handle success only
    @bar(48) -> {
        reply "hello";
    };

    // handle failure only
    @baz(128) -> (result) {
    }
    ** -> (err) {
        reply "bummer";
    };

    // todo
    // after baz(12) mute;

    // handle both success and failure
    @foo(42) -> (a, b) {
        reply "yay";
    }
    on failure -> {
        reply "darn";
    };


    // nested requests
    // should we support pipes like 42 -> foo -> bar -> baz?
    result = @foo(42) -> {

        result = @bar(result) -> {

            yarp = @baz(result);
        }
        on failure -> {
            fail "narp";
        };
    }
    on failure -> {
        reply "darn";
    };

    // sync form in expressions

    foo(bar());

    x = foo() + 7;

    // error handler only
    x = foo() on failure -> (error) {
        substitute "ok";
    };

    // both handlers
    x = bar() -> (result) {
        reply "ok";
    }
    on failure -> (error) {
        substitute "ok";
    };

    y = @foo() on failure -> (error) {
        substitute "ok";
    };
};