test is <-> {

    // sync calls

    foo;        // how it's supposed to work in Lo
    foo.bar();  // only supported for backwards-compatibility with programmers; should emit warning

    x = foo();
    (x, y) = foo();

    // todo?
    // x, y = foo();

    // async calls

    @foo << (18);

    async sessionStore.getByID << (sessionID);

    (bar, baz) = @foo(47);  // destructuring
    //47 >> foo => (bar, baz);  // destructuring

    // handle success only
    @bar << (48) -> {
        reply "hello";
    };

    // handle failure only
    @baz << (128) -> (result) {
    }
    on fail -> (err) {
        reply "bummer";
    };

    // todo
    // after baz(12) mute;

    // handle both success and failure
    async foo << (42) -> (a, b) {
        reply "yay";
    }
    on fail -> {
        reply "darn";
    };


    // nested requests
    // should we support pipes like 42 -> foo -> bar -> baz?
    @foo << (42) -> {

        @bar << (result) -> {

            yarp = @baz(result);
        }
        on fail -> {
            fail "narp";
        };
    }
    on fail -> {
        reply "darn";
    };

    // sync form in expressions

    foo(bar());

    x = foo() + 7;

    // async with fail handler only

    foo on fail -> (error) {
        substitute "ok";
    };

    // both handlers
    bar -> (result) {
        reply "ok";
    }
    on fail -> (error) {
        substitute "ok";
    };
};