/**
 */
action (args, stdin, system, shop) {

    port is 8080;

    "oh noes!\n" => message

/*

    compile to a promise chain?

    // creates a list if plural?
    shop.make(name) => thing

    create a function for the LHS
    create a function for the RHS determined by connector
    each RHS function has sig (out, err, log)

    the RHS fn is called when LHS result is available?
    have them return promises?

    call LHS(RHS)

    ~ compiles to

    function (out, err, log) {

        if (out)
        if (err) {

        }
    }


    "hello, world!\n" -> action (msg) {

        msg -> out
    }
    -> out

    expr -> action translates to

    action(expr_result,

    Q.resolve("hello, world!\n").then(
        function () {


        }
    ).then(out);


    shop.make('Http/Logger/ELF', stdout) => logger;
    shop.make('Http/Server', logger) => server;

    server.on('request') >> action (request) {
        request.end("hi there!");
    }

    server.open(port) ~ action (err) {
        log.err("failed to open port _port_: ");
    }
    -> action {
        log.info("server running on port _port_");
    }

    system.on('SIGINT') >> action {
        log.info("received SIGINT");
        server.close();
    }*/
}